import {GetJson as GetJson} from "loadRequested.js"
import {objectEntries as objectEntries } from "loadRequested.js"
import {GetBible as GetBible } from "bible.js";
import {Modal as Modal} from "loadRequested.js";
// class Nav {
//   constructor() {
//     let bibleArrow = document.querySelector('.bible-arrows');
//     this.bibleArrow = () => bibleArrow;
//   }
//   minMax() {
//     this.bibleArrow().addEventListener('click', (e) => {
//       let parentNodeNav = e.target.parentNode;
//       let navItem = parentNodeNav.getElementsByTagName('span');
//       if ( this.bibleArrow().classList.toString().indexOf("fa-long-arrow-left") >= 1 ) {
//           parentNodeNav.setAttribute('data-minmax', 'minimise');
//           setTimeout(() => {
//             Array.from(navItem, (item) => {
//               item.nextElementSibling.setAttribute('data-display', 'none');
//               item.setAttribute('data-display', 'none');
//               item.parentNode.setAttribute('class', item.parentNode.getAttribute('class') + ' fa-lg');
//             })
//             this.bibleArrow().classList.toggle('fa-long-arrow-left');
//             this.bibleArrow().setAttribute('class', this.bibleArrow().getAttribute('class') + " fa-long-arrow-right");
//           }, 100);
//       } else {
//          parentNodeNav.setAttribute('data-minmax', 'maximise');
//          setTimeout(() => {
//            Array.from(navItem, (item) => {
//              item.nextElementSibling.removeAttribute('data-display');
//              item.removeAttribute('data-display');
//              item.parentNode.classList.toggle('fa-lg');
//            })
//            this.bibleArrow().classList.toggle('fa-long-arrow-right');
//            this.bibleArrow().setAttribute('class', this.bibleArrow().getAttribute('class') + " fa-long-arrow-left");
//          }, 100);
//       }
//     });
//     return this;
//   }
// }
class IconBar {
  constructor() {
    let iconBar = document.querySelector('.fa-bars');
    this.iconBar = () => iconBar;
  }
  openIconBar() {
    this.iconBar().addEventListener('click', (e) => {
      let target = e.target;
      let bibleNavItemParent = document.querySelector('.bible-nav');
      let homeScreen = document.querySelector('.bible-home-screen');
      
      if ( ! bibleNavItemParent.hasAttribute('data-open-bar') ) {
          homeScreen.setAttribute('data-reduce-size','reducesize');
          bibleNavItemParent.setAttribute('data-open-bar', 'openbar')
          return ;
      }

      homeScreen.removeAttribute('data-reduce-size');

      bibleNavItemParent.removeAttribute('data-open-bar');
      bibleNavItemParent.setAttribute('data-close-bar', 'closebar');      
    });
  }
}
let icBar = new IconBar();
icBar.openIconBar();
class NavNavigation {
  constructor() {
    let bibleNavItemParent = document.querySelector('.bible-nav-list');
    this.bibleNavItemParent = () => bibleNavItemParent;
  }
  static BibleChapters() {
    let bible = new GetBible();
    let bibleChapters = bible.getBible();
    return bibleChapters;
  }
  static PlaceLocationInDom(testament, bibleType) {
    let bibleChoice = document.querySelector(bibleType);
    let homeScreen = document.querySelector('.bible-home-screen');
    let testaMentParent = document.createElement('div');
    testaMentParent.setAttribute('class', 'bible-testament');
    if ( bibleChoice ) {
      bibleChoice.setAttribute('data-display', 'none');
      let removeTestamentParent = homeScreen.getElementsByClassName('bible-testament')[0];
      if ( removeTestamentParent !== undefined ) {
        removeTestamentParent.remove();
      }
      homeScreen.appendChild(testaMentParent)
      for ( let [otKey, otValue] of objectEntries(testament) ) {
        let location = document.createElement('p');;
        location.setAttribute('class', 'bible-location');
        location.innerHTML = `${otValue}`;
        testaMentParent.appendChild(location);
      }

    }
  }
  navigate() {
    this.bibleNavItemParent().addEventListener('click', (e) => {
      let target = e.target;
      let homeScreen = document.querySelector(".bible-home-screen");
      let targetElement = target.classList.toString().includes("bible-nav-item") || target.parentNode.classList.toString().includes("bible-nav-item");

      if ( targetElement ) {

        let targetEl = target.parentNode.nodeName.toLowerCase() === "li" ? target.parentNode : target;
        let showElement = targetEl.getAttribute('data-target')
        let homeScreenChild = homeScreen.getElementsByClassName(showElement)[0];

        if ( ! homeScreenChild ) return;

        if ( homeScreenChild.hasAttribute('data-display') ) {
            Array.from(homeScreen.children, (children) => {
                if ( ! children.hasAttribute('data-display') ) {
                  children.setAttribute('data-display', 'none');
                }

            })
            homeScreenChild.removeAttribute('data-display');
            if ( homeScreenChild.getAttribute('class') === "bible-ot" ) {
                let getOldTestament = new GetJson("js/jsons/oldtestament.json");
                getOldTestament.loadJson().then((ot) => {
                  NavNavigation.PlaceLocationInDom(ot,".bible-ot");
                  NavNavigation.BibleChapters()
                  Modal.extended();
                });
            } else if( homeScreenChild.getAttribute('class') === "bible-newt" ) {
              let getNewTestament = new GetJson("js/jsons/newtestament.json");
              getNewTestament.loadJson().then((nt) => {
                NavNavigation.PlaceLocationInDom(nt,".bible-newt");
                NavNavigation.BibleChapters()
                Modal.extended();
              })
            }
        }
      }
    })
  }
}
// var navigation = new Nav();
// navigation.minMax()

var navigationNavigate = new NavNavigation()
navigationNavigate.navigate();
